/* ******************************************************************** *
 * Copyright International Business Machines Corporation 1993, 1994     *
 * DISCLAIMER OF WARRANTIES.                                            *
 * The following [enclosed] code is sample code created by IBM          *
 * Corporation. This sample code is not part of any standard or IBM     *
 * product and is provided to you solely for the purpose of assisting   *
 * you in the development of your applications.  The code is provided   *
 * "AS IS". IBM MAKES NO WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT  *
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS *
 * FOR A PARTICULAR PURPOSE, REGARDING THE FUNCTION OR PERFORMANCE OF   *
 * THIS CODE.  IBM shall not be liable for any damages arising out of   *
 * your use of the sample code, even if they have been advised of the   *
 * possibility of such damages.                                         *
 *                                                                      *
 * DISTRIBUTION.                                                        *
 * This sample code can be freely distributed, copied, altered, and     *
 * incorporated into other software, provided that it bears the above   *
 * Copyright notice and DISCLAIMER intact.                              *
 * -------------------------------------------------------------------- *
 * SOMBank Sample Application                                           *
 *                                                                      *
 * Documented in:                                                       *
 *  IBM International Technical Support Organization Bulletin (Redbook) *
 *  "SOMobjects: A Practical Introduction to SOM and DSOM" (GG24-4357)  *
 * -------------------------------------------------------------------- *
 *                                                                      *
 * FILE       : customer.idl                                            *
 *                                                                      *
 * CLASS NAMES: CustomerMetaClass and Customer                          *
 *                                                                      *
 * DESCRIPTION: CustomerMetaClass provides constructors to create       *
 *              instances of the class Customer with specific           *
 *              variable values.                                        *
 *              The constructors access the customer DB object          *
 *              to get all the needed values.                           *
 *                                                                      *
 *              Customer class  provides the methods of the customer    *
 *              objects created by the CustomerMetaClass                *
 *              constructor.                                            *
 * ******************************************************************** *
 */

#ifndef Customer_IDL
#define Customer_IDL

#include <somcls.idl>

interface Customer;  // Forward Declaration of Customer

interface CustomerMetaClass : SOMClass
{
   /*------------------------------*/
   /*          Methods             */
   /*------------------------------*/

   Customer create(in string name,in string branch);
   Customer restore(in long identifier);


   #ifdef __SOMIDL__
       implementation
       {
          dllname = "customer.dll";

          releaseorder: create, restore;
       };
   #endif /*__SOMIDL__*/
};

interface Customer : SOMObject
{
    /*------------------------------*/
    /*     Types and Constants      */
    /*------------------------------*/

    const long MAX_NAME_LENGTH= 50 ;
    const long MAX_BRANCH_LENGTH= 20 ;

    /*------------------------------*/
    /*          Methods             */
    /*------------------------------*/

    boolean  isValidPin(in long pin);
    long     save();
    long     delete();

    /*------------------------------*/
    /*        Attributes            */
    /*------------------------------*/

    attribute long identifier;
    attribute long pin;
    attribute string<MAX_NAME_LENGTH> name;
    attribute string<MAX_BRANCH_LENGTH> branch;

    /*------------------------------*/
    /*       Implementation         */
    /*------------------------------*/

    #ifdef __SOMIDL__
        implementation
        {
            dllname   = "customer.dll";

            metaclass = CustomerMetaClass ;

            releaseorder: isValidPin,
                          save,
                          delete,
                          _get_identifier,
                          _set_identifier,
                          _get_pin,
                          _set_pin,
                          _get_name,
                          _set_name,
                          _get_branch,
                          _set_branch;

            /*------------------------------*/
            /*      Method Overrides        */
            /*------------------------------*/
            name:      noset;
            branch:    noset;
            somUninit: override;

            passthru C_h = "#include \"cdb.h\"";
        };
    #endif /*__SOMIDL__*/
};
#endif /*Customer_IDL*/
